<launch>
  <arg name="nav" default="true" />
  <arg name="rosbag_play" default="false" />
  <arg name="bag" default="/media/Edog/Rosbag/dpo.bag"/>
  <arg name="saved_map" default="$(env ROS_TEST_RESULTS_DIR)/map.yaml"/>
  <arg name="pcd_resolution" default="0.05" />
  <arg name="local_costmap_pcd_resolution" default="0.05" />

  <group if="$(arg rosbag_play)">
    <!-- Plays the rosbag file -->
    <node pkg="rosbag" type="play" name="rosbag" args="$(arg bag) --clock" />
    <param name="use_sim_time" type="bool" value="True"/> 

    <!-- Creates a pointcloud from depth and rgbd images -->
    <node pkg="nodelet" type="nodelet" args="manager"
      name="record_player_manager" output="screen"/>
      <node pkg="nodelet" type="nodelet" name="cloudify"
        args="load depth_image_proc/point_cloud_xyzrgb record_player_manager --no-bond">
        <remap from="depth_registered/image_rect" to="/camera/depth_registered/hw_registered/image_rect_raw_throttle"/>
        <remap from="depth_registered/points" to="camera/depth_registered/points"/>
        <remap from="rgb/image_rect_color" to="/camera/rgb/image_rect_color_throttle"/>
        <remap from="rgb/camera_info" to="/camera/depth/camera_info"/>
      </node>

    </group>
    <group unless="$(arg rosbag_play)">
     <!-- Start Q.bo drivers -->
      <node name="qbo_arduqbo" pkg="qbo_arduqbo" type="qbo_arduqbo" output="screen" respawn="true">
        <rosparam file="$(find qbo_rgbd_slam)/launch/include/qbo_driver_settings_graphSLAM.yaml" command="load" />
      </node>
      <!-- Add in head joint odometry -->
      <!--<node name="joint_odometry" pkg="qbo_joint_odom" type="qbo_joint_odom.py" />-->
      <node name="rigid_joints" pkg="tf" type="static_transform_publisher" args="0 0 0.3 0 0.25 0.0 base_link head 100" />
      <group>
        <node name="joypad" pkg="joy" type="joy_node"/>
        <node name="joypad_controller" pkg="qbo_joypad" type="joypad_controller.py" />
      </group>
      <!-- Load openni driver -->
      <include file="$(find openni2_launch)/launch/openni2.launch">
        <arg name="depth_registration" value="true" />
      </include>

      <!-- Transform between base_footprint and the head --> 
      <node name="link" pkg="tf" type="static_transform_publisher" args="0.06 0 0.02 0 0 0 base_footprint base_link 100" />

      <!-- Our camera is slightly on the skew, hence the slight roll -->
      <node name="depth_camera" pkg="tf" type="static_transform_publisher" args="0.02 0 0.13 0 0 0.04 head camera_link 100" />

    </group>

    <!-- Publishes tf between map and odom frame"-->
    <node name="correction_pub" pkg="qbo_rgbd_slam" type="qbo_map_odom_publisher" />

    <!-- Add a voxel filter for the point cloud-->
    <node name="voxel_filter" pkg="qbo_pcl" type="qbo_pcl_decimator">
      <param name="leaf_size" value="$(arg local_costmap_pcd_resolution)" />
      <param name="input_topic" value="/camera/depth_registered/points" />
      <param name="output_topic" value="/camera/depth_registered/points_filtered" />
    </node>

    <!-- Start the mapping nodes -->
    <include file="$(find qbo_rgbd_slam)/launch/include/mapping.launch">
      <arg name="localization_only" value="true"/>
      <arg name="pcd_map_resolution" value="$(arg pcd_resolution)"/>
      <group if="$(arg rosbag_play)">
        <arg name="rgb_input_topic" value="/camera/rgb/image_rect_color_throttle" />
        <arg name="depth_input_topic" value="/camera/depth_registered/hw_registered/image_rect_raw_throttle" />
      </group>
    </include>

    <group if="$(arg nav)">
      <!--Map Server-->
      <node name="map_server_node" pkg="map_server" type="map_server" args="$(arg saved_map)" />
      <!--Path Planner-->
      <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <param name="planner_frequency" value="1.0" />
        <rosparam file="$(find qbo_rgbd_slam)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find qbo_rgbd_slam)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find qbo_rgbd_slam)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find qbo_rgbd_slam)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find qbo_rgbd_slam)/config/base_local_planner_params.yaml" command="load" />
      </node>
    </group>

  </launch>